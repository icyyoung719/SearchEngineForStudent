<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="106" passed="106" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-27T12:50:12Z" name="All Test Suite" finished-at="2024-05-27T12:50:13Z" duration-ms="1099">
    <groups>
    </groups>
    <test started-at="2024-05-27T12:50:12Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java" finished-at="2024-05-27T12:50:12Z" duration-ms="33">
      <class name="hust.cs.javacourse.search.index.TermTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@569cfc36]" started-at="2024-05-27T12:50:12Z" name="testTestEquals" data-provider="testTerm" finished-at="2024-05-27T12:50:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@5bfa9431]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@569cfc36]" started-at="2024-05-27T12:50:12Z" name="testTestEquals" data-provider="testTerm" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@5db250b4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@569cfc36]" started-at="2024-05-27T12:50:12Z" name="testSetContent" data-provider="testTerm" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@569cfc36]" started-at="2024-05-27T12:50:12Z" name="testTestToString" data-provider="testTerm" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@569cfc36]" started-at="2024-05-27T12:50:12Z" name="testGetContent" data-provider="testTerm" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@569cfc36]" started-at="2024-05-27T12:50:12Z" name="testCompareTo" data-provider="testTerm" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@184cf7cf]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@569cfc36]" started-at="2024-05-27T12:50:12Z" name="testCompareTo" data-provider="testTerm" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@2fd6b6c7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@569cfc36]" started-at="2024-05-27T12:50:12Z" name="testWriteObject" data-provider="testTerm" finished-at="2024-05-27T12:50:12Z" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@569cfc36]" started-at="2024-05-27T12:50:12Z" name="testReadObject" data-provider="testTerm" finished-at="2024-05-27T12:50:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.TermTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java -->
    <test started-at="2024-05-27T12:50:12Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java" finished-at="2024-05-27T12:50:12Z" duration-ms="5">
      <class name="hust.cs.javacourse.search.index.TermTupleTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@1786f9d5]" started-at="2024-05-27T12:50:12Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@778d1062]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@1786f9d5]" started-at="2024-05-27T12:50:12Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@670002]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@1786f9d5]" started-at="2024-05-27T12:50:12Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@1f0f1111]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTermTuple, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@1786f9d5]" started-at="2024-05-27T12:50:12Z" name="testTestToString" data-provider="testTermTuple" finished-at="2024-05-27T12:50:12Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[TermTuple: Search freq:1 curPos:100
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@49c386c8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
      </class> <!-- hust.cs.javacourse.search.index.TermTupleTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java -->
    <test started-at="2024-05-27T12:50:12Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java" finished-at="2024-05-27T12:50:12Z" duration-ms="12">
      <class name="hust.cs.javacourse.search.index.PostingTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@481a15ff]" started-at="2024-05-27T12:50:12Z" name="testTestEquals" data-provider="testPosting" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@659a969b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@481a15ff]" started-at="2024-05-27T12:50:12Z" name="testTestEquals" data-provider="testPosting" finished-at="2024-05-27T12:50:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@76908cc0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@481a15ff]" started-at="2024-05-27T12:50:12Z" name="testTestEquals" data-provider="testPosting" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@1d119efb]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@481a15ff]" started-at="2024-05-27T12:50:12Z" name="testTestEquals" data-provider="testPosting" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@6fe7aac8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@481a15ff]" started-at="2024-05-27T12:50:12Z" name="testTestEquals" data-provider="testPosting" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@22a637e7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPosting, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@481a15ff]" started-at="2024-05-27T12:50:12Z" name="testTestToString" data-provider="testPosting" finished-at="2024-05-27T12:50:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId:1, freq:4, positions: 10 100 320 400}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2473d930]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testSetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@481a15ff]" started-at="2024-05-27T12:50:12Z" name="testSetFreq" data-provider="testPosting" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId:0, freq:8, positions:}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetFreq -->
        <test-method signature="testGetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@481a15ff]" started-at="2024-05-27T12:50:12Z" name="testGetFreq" data-provider="testPosting" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId:1, freq:4, positions: 10 100 320 400}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFreq -->
        <test-method signature="testSetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@481a15ff]" started-at="2024-05-27T12:50:12Z" name="testSetPositions" data-provider="testPosting" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId:0, freq:0, positions: 100 320 400}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetPositions -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@481a15ff]" started-at="2024-05-27T12:50:12Z" name="testGetDocId" data-provider="testPosting" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId:1, freq:4, positions: 10 100 320 400}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@481a15ff]" started-at="2024-05-27T12:50:12Z" name="testGetPositions" data-provider="testPosting" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId:1, freq:4, positions: 10 100 320 400}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPositions -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractPosting;, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@481a15ff]" started-at="2024-05-27T12:50:12Z" name="testCompareTo" data-provider="testPosting" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@69b2283a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@481a15ff]" started-at="2024-05-27T12:50:12Z" name="testSetDocId" data-provider="testPosting" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId:20, freq:0, positions:}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@481a15ff]" started-at="2024-05-27T12:50:12Z" name="testSort" data-provider="testPosting" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId:1, freq:4, positions: 10 100 320 400}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@481a15ff]" started-at="2024-05-27T12:50:12Z" name="testWriteObject" data-provider="testPosting" finished-at="2024-05-27T12:50:12Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId:1, freq:4, positions: 10 100 320 400}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@481a15ff]" started-at="2024-05-27T12:50:12Z" name="testReadObject" data-provider="testPosting" finished-at="2024-05-27T12:50:12Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Posting{docId:1, freq:4, positions: 10 100 320 400}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java -->
    <test started-at="2024-05-27T12:50:12Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java" finished-at="2024-05-27T12:50:12Z" duration-ms="8">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method signature="testAdd(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testAdd" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:Posting{docId:1, freq:4, positions: 1 2 3 4}
Posting{docId:2, freq:2, positions: 5 6}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@29626d54]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method signature="testTestAdd(hust.cs.javacourse.search.index.AbstractPostingList, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testTestAdd" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:Posting{docId:1, freq:4, positions: 1 2 3 4}
Posting{docId:2, freq:2, positions: 5 6}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Posting{docId:1, freq:4, positions: 1 2 3 4}, Posting{docId:1, freq:4, positions: 2 4 3 1}, Posting{docId:2, freq:2, positions: 5 6}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestAdd -->
        <test-method signature="testTestIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testTestIndexOf" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:Posting{docId:1, freq:4, positions: 1 2 3 4}
Posting{docId:2, freq:2, positions: 5 6}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@19bb07ed]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestIndexOf -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testTestToString" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:Posting{docId:1, freq:4, positions: 1 2 3 4}
Posting{docId:2, freq:2, positions: 5 6}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@353d0772]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testGet(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testGet" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:Posting{docId:1, freq:4, positions: 1 2 3 4}
Posting{docId:2, freq:2, positions: 5 6}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@6e4784bc]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method signature="testIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testIndexOf" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:Posting{docId:1, freq:4, positions: 1 2 3 4}
Posting{docId:2, freq:2, positions: 5 6}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@34b7ac2f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testSize" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testClear(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.Object)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testClear" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method signature="testTestRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testTestRemove" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@10e41621]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestRemove -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testContains" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:Posting{docId:1, freq:4, positions: 1 2 3 4}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@5a63f509]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:Posting{docId:1, freq:4, positions: 1 2 3 4}
Posting{docId:2, freq:2, positions: 5 6}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.Integer;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testSort" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:Posting{docId:2, freq:4, positions: 5 9 7 8}
Posting{docId:3, freq:2, positions: 10 11}
Posting{docId:4, freq:4, positions: 1 4 3 2}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Integer;@4b0b0854]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testRemove" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@e056f20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testSize" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:Posting{docId:1, freq:4, positions: 1 2 3 4}
Posting{docId:2, freq:2, positions: 5 6}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testWriteObject" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:Posting{docId:1, freq:4, positions: 1 2 3 4}
Posting{docId:2, freq:2, positions: 5 6}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="testReadObject" data-provider="testPostingList" finished-at="2024-05-27T12:50:12Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PostingList:Posting{docId:1, freq:4, positions: 1 2 3 4}
Posting{docId:2, freq:2, positions: 5 6}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java -->
    <test started-at="2024-05-27T12:50:12Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java" finished-at="2024-05-27T12:50:12Z" duration-ms="3">
      <class name="hust.cs.javacourse.search.index.DocumentTest">
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@3b94d659]" started-at="2024-05-27T12:50:12Z" name="testGetDocPath" data-provider="testDocument" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:C:/1.txt docId:1 tuples:
TermTuple: aaa freq:1 curPos:17
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetTuples(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@3b94d659]" started-at="2024-05-27T12:50:12Z" name="testGetTuples" data-provider="testDocument" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:C:/1.txt docId:1 tuples:
TermTuple: aaa freq:1 curPos:17
TermTuple: bbb freq:1 curPos:30
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple: aaa freq:1 curPos:17
, TermTuple: bbb freq:1 curPos:30
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuples -->
        <test-method signature="testSetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@3b94d659]" started-at="2024-05-27T12:50:12Z" name="testSetDocPath" data-provider="testDocument" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:C:/2.txt docId:0 tuples:
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocPath -->
        <test-method signature="testAddTuple(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@3b94d659]" started-at="2024-05-27T12:50:12Z" name="testAddTuple" data-provider="testDocument" finished-at="2024-05-27T12:50:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:C:/1.txt docId:1 tuples:
TermTuple: aaa freq:1 curPos:17
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TermTuple: aaa freq:1 curPos:17
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddTuple -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@3b94d659]" started-at="2024-05-27T12:50:12Z" name="testGetDocId" data-provider="testDocument" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:C:/1.txt docId:1 tuples:
TermTuple: aaa freq:1 curPos:17
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@3b94d659]" started-at="2024-05-27T12:50:12Z" name="testSetDocId" data-provider="testDocument" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:null docId:2 tuples:
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@3b94d659]" started-at="2024-05-27T12:50:12Z" name="testContains" data-provider="testDocument" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:C:/1.txt docId:1 tuples:
TermTuple: aaa freq:1 curPos:17
TermTuple: bbb freq:1 curPos:30
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TermTuple: aaa freq:1 curPos:17
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testGetTuple(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@3b94d659]" started-at="2024-05-27T12:50:12Z" name="testGetTuple" data-provider="testDocument" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:C:/1.txt docId:1 tuples:
TermTuple: aaa freq:1 curPos:17
TermTuple: bbb freq:1 curPos:30
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple: aaa freq:1 curPos:17
, TermTuple: bbb freq:1 curPos:30
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuple -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractDocument, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@3b94d659]" started-at="2024-05-27T12:50:12Z" name="testTestToString" data-provider="testDocument" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:C:/1.txt docId:1 tuples:
TermTuple: aaa freq:1 curPos:17
TermTuple: bbb freq:1 curPos:30
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@48ae9b55]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@3b94d659]" started-at="2024-05-27T12:50:12Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:C:/1.txt docId:1 tuples:
TermTuple: aaa freq:1 curPos:17
TermTuple: bbb freq:1 curPos:30
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@3b94d659]" started-at="2024-05-27T12:50:12Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:C:/1.txt docId:1 tuples:
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@3b94d659]" started-at="2024-05-27T12:50:12Z" name="testContains" data-provider="testDocument" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:C:/1.txt docId:1 tuples:
TermTuple: aaa freq:1 curPos:17
TermTuple: bbb freq:1 curPos:30
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[TermTuple: bbb freq:1 curPos:30
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java -->
    <test started-at="2024-05-27T12:50:12Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java" finished-at="2024-05-27T12:50:12Z" duration-ms="11">
      <class name="hust.cs.javacourse.search.parse.TermTupleScannerTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@543788f3]" started-at="2024-05-27T12:50:12Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2024-05-27T12:50:12Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@5e82df6a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple: aaa freq:1 curPos:0
, TermTuple: bbb freq:1 curPos:1
, TermTuple: ccc freq:1 curPos:2
, TermTuple: ddd freq:1 curPos:3
, TermTuple: is freq:1 curPos:4
, TermTuple: f17 freq:1 curPos:5
, TermTuple: 2020 freq:1 curPos:6
, TermTuple: ab freq:1 curPos:7
, TermTuple: ababababababababababab freq:1 curPos:8
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@543788f3]" started-at="2024-05-27T12:50:12Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2024-05-27T12:50:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@3f197a46]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple: activity freq:1 curPos:0
, TermTuple: destination freq:1 curPos:1
, TermTuple: emergency freq:1 curPos:2
, TermTuple: 26% freq:1 curPos:3
, TermTuple: u571 freq:1 curPos:4
, TermTuple: because freq:1 curPos:5
, TermTuple: hence freq:1 curPos:6
, TermTuple: capital freq:1 curPos:7
, TermTuple: i freq:1 curPos:8
, TermTuple: frozen freq:1 curPos:9
, TermTuple: benefits freq:1 curPos:10
, TermTuple: google freq:1 curPos:11
, TermTuple: hahahahahahahahahahahahah freq:1 curPos:12
, TermTuple: ha freq:1 curPos:13
, TermTuple: frozen freq:1 curPos:14
, TermTuple: google freq:1 curPos:15
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.TermTupleScannerTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java -->
    <test started-at="2024-05-27T12:50:12Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java" finished-at="2024-05-27T12:50:12Z" duration-ms="9">
      <class name="hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@5a4041cc]" started-at="2024-05-27T12:50:12Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2024-05-27T12:50:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@76508ed1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple: aaa freq:1 curPos:0
, TermTuple: bbb freq:1 curPos:1
, TermTuple: ccc freq:1 curPos:2
, TermTuple: ddd freq:1 curPos:3
, TermTuple: f17 freq:1 curPos:4
, TermTuple: 2020 freq:1 curPos:5
, TermTuple: ab freq:1 curPos:6
, TermTuple: ababababababababababab freq:1 curPos:7
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@5a4041cc]" started-at="2024-05-27T12:50:12Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2024-05-27T12:50:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@41e36e46]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple: aaa freq:1 curPos:0
, TermTuple: bbb freq:1 curPos:1
, TermTuple: ccc freq:1 curPos:3
, TermTuple: ddd freq:1 curPos:4
, TermTuple: f17 freq:1 curPos:6
, TermTuple: 2020 freq:1 curPos:7
, TermTuple: ab freq:1 curPos:8
, TermTuple: ababababababababababab freq:1 curPos:10
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@5a4041cc]" started-at="2024-05-27T12:50:12Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@15c43bd9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple: activity freq:1 curPos:0
, TermTuple: destination freq:1 curPos:1
, TermTuple: emergency freq:1 curPos:2
, TermTuple: 26% freq:1 curPos:3
, TermTuple: u571 freq:1 curPos:4
, TermTuple: capital freq:1 curPos:7
, TermTuple: frozen freq:1 curPos:9
, TermTuple: benefits freq:1 curPos:10
, TermTuple: google freq:1 curPos:11
, TermTuple: hahahahahahahahahahahahah freq:1 curPos:12
, TermTuple: ha freq:1 curPos:13
, TermTuple: frozen freq:1 curPos:14
, TermTuple: google freq:1 curPos:15
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java -->
    <test started-at="2024-05-27T12:50:12Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java" finished-at="2024-05-27T12:50:12Z" duration-ms="4">
      <class name="hust.cs.javacourse.search.parse.PatternTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@1068e947]" started-at="2024-05-27T12:50:12Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@72f926e6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple: aaa freq:1 curPos:0
, TermTuple: bbb freq:1 curPos:2
, TermTuple: ab freq:1 curPos:3
, TermTuple: ccc freq:1 curPos:4
, TermTuple: ddd freq:1 curPos:5
, TermTuple: ababababababababababab freq:1 curPos:7
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@1068e947]" started-at="2024-05-27T12:50:12Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@3daa422a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple: activity freq:1 curPos:0
, TermTuple: destination freq:1 curPos:1
, TermTuple: emergency freq:1 curPos:2
, TermTuple: because freq:1 curPos:5
, TermTuple: hence freq:1 curPos:6
, TermTuple: capital freq:1 curPos:7
, TermTuple: i freq:1 curPos:8
, TermTuple: frozen freq:1 curPos:9
, TermTuple: benefits freq:1 curPos:10
, TermTuple: google freq:1 curPos:11
, TermTuple: hahahahahahahahahahahahah freq:1 curPos:12
, TermTuple: ha freq:1 curPos:13
, TermTuple: frozen freq:1 curPos:14
, TermTuple: google freq:1 curPos:15
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.PatternTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java -->
    <test started-at="2024-05-27T12:50:12Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java" finished-at="2024-05-27T12:50:12Z" duration-ms="4">
      <class name="hust.cs.javacourse.search.parse.LengthTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@73d4cc9e]" started-at="2024-05-27T12:50:12Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@7ed7259e]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple: aaa freq:1 curPos:0
, TermTuple: bbb freq:1 curPos:1
, TermTuple: ccc freq:1 curPos:3
, TermTuple: ddd freq:1 curPos:4
, TermTuple: f17 freq:1 curPos:5
, TermTuple: 2020 freq:1 curPos:6
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@73d4cc9e]" started-at="2024-05-27T12:50:12Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@28eaa59a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple: activity freq:1 curPos:0
, TermTuple: destination freq:1 curPos:1
, TermTuple: emergency freq:1 curPos:2
, TermTuple: 26% freq:1 curPos:3
, TermTuple: u571 freq:1 curPos:4
, TermTuple: because freq:1 curPos:5
, TermTuple: hence freq:1 curPos:6
, TermTuple: capital freq:1 curPos:7
, TermTuple: frozen freq:1 curPos:9
, TermTuple: benefits freq:1 curPos:10
, TermTuple: google freq:1 curPos:11
, TermTuple: frozen freq:1 curPos:14
, TermTuple: google freq:1 curPos:15
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.LengthTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java -->
    <test started-at="2024-05-27T12:50:12Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java" finished-at="2024-05-27T12:50:12Z" duration-ms="2">
      <class name="hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@44f75083]" started-at="2024-05-27T12:50:12Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2024-05-27T12:50:12Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@c33b74f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple: aaa freq:1 curPos:1
, TermTuple: bbb freq:1 curPos:2
, TermTuple: ccc freq:1 curPos:4
, TermTuple: ddd freq:1 curPos:6
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@44f75083]" started-at="2024-05-27T12:50:12Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2024-05-27T12:50:12Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@130161f7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TermTuple: activity freq:1 curPos:0
, TermTuple: destination freq:1 curPos:1
, TermTuple: emergency freq:1 curPos:2
, TermTuple: capital freq:1 curPos:7
, TermTuple: frozen freq:1 curPos:9
, TermTuple: benefits freq:1 curPos:10
, TermTuple: google freq:1 curPos:11
, TermTuple: frozen freq:1 curPos:14
, TermTuple: google freq:1 curPos:15
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java -->
    <test started-at="2024-05-27T12:50:12Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java" finished-at="2024-05-27T12:50:13Z" duration-ms="473">
      <class name="hust.cs.javacourse.search.index.DocumentBuilderTest">
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4f51b3e0]" started-at="2024-05-27T12:50:13Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2024-05-27T12:50:13Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//text/2.txt docId:0 tuples:
TermTuple: activity freq:1 curPos:0
TermTuple: destination freq:1 curPos:1
TermTuple: emergency freq:1 curPos:2
TermTuple: 26% freq:1 curPos:3
TermTuple: u571 freq:1 curPos:4
TermTuple: because freq:1 curPos:5
TermTuple: hence freq:1 curPos:6
TermTuple: capital freq:1 curPos:7
TermTuple: i freq:1 curPos:8
TermTuple: frozen freq:1 curPos:9
TermTuple: benefits freq:1 curPos:10
TermTuple: google freq:1 curPos:11
TermTuple: hahahahahahahahahahahahah freq:1 curPos:12
TermTuple: ha freq:1 curPos:13
TermTuple: frozen freq:1 curPos:14
TermTuple: google freq:1 curPos:15
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Document: path:D:\IdeaWorkspace\SeachEngine/text/2.txt docId:0 tuples:
TermTuple: activity freq:1 curPos:0
TermTuple: destination freq:1 curPos:1
TermTuple: emergency freq:1 curPos:2
TermTuple: 26% freq:1 curPos:3
TermTuple: u571 freq:1 curPos:4
TermTuple: because freq:1 curPos:5
TermTuple: hence freq:1 curPos:6
TermTuple: capital freq:1 curPos:7
TermTuple: i freq:1 curPos:8
TermTuple: frozen freq:1 curPos:9
TermTuple: benefits freq:1 curPos:10
TermTuple: google freq:1 curPos:11
TermTuple: hahahahahahahahahahahahah freq:1 curPos:12
TermTuple: ha freq:1 curPos:13
TermTuple: frozen freq:1 curPos:14
TermTuple: google freq:1 curPos:15
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4f51b3e0]" started-at="2024-05-27T12:50:13Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//text/2.txt docId:0 tuples:
TermTuple: activity freq:1 curPos:0
TermTuple: destination freq:1 curPos:1
TermTuple: emergency freq:1 curPos:2
TermTuple: 26% freq:1 curPos:3
TermTuple: u571 freq:1 curPos:4
TermTuple: capital freq:1 curPos:7
TermTuple: frozen freq:1 curPos:9
TermTuple: benefits freq:1 curPos:10
TermTuple: google freq:1 curPos:11
TermTuple: hahahahahahahahahahahahah freq:1 curPos:12
TermTuple: ha freq:1 curPos:13
TermTuple: frozen freq:1 curPos:14
TermTuple: google freq:1 curPos:15
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Document: path:D:\IdeaWorkspace\SeachEngine/text/2.txt docId:0 tuples:
TermTuple: activity freq:1 curPos:0
TermTuple: destination freq:1 curPos:1
TermTuple: emergency freq:1 curPos:2
TermTuple: 26% freq:1 curPos:3
TermTuple: u571 freq:1 curPos:4
TermTuple: capital freq:1 curPos:7
TermTuple: frozen freq:1 curPos:9
TermTuple: benefits freq:1 curPos:10
TermTuple: google freq:1 curPos:11
TermTuple: hahahahahahahahahahahahah freq:1 curPos:12
TermTuple: ha freq:1 curPos:13
TermTuple: frozen freq:1 curPos:14
TermTuple: google freq:1 curPos:15
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4f51b3e0]" started-at="2024-05-27T12:50:13Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//text/2.txt docId:0 tuples:
TermTuple: activity freq:1 curPos:0
TermTuple: destination freq:1 curPos:1
TermTuple: emergency freq:1 curPos:2
TermTuple: 26% freq:1 curPos:3
TermTuple: u571 freq:1 curPos:4
TermTuple: because freq:1 curPos:5
TermTuple: hence freq:1 curPos:6
TermTuple: capital freq:1 curPos:7
TermTuple: frozen freq:1 curPos:9
TermTuple: benefits freq:1 curPos:10
TermTuple: google freq:1 curPos:11
TermTuple: frozen freq:1 curPos:14
TermTuple: google freq:1 curPos:15
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Document: path:D:\IdeaWorkspace\SeachEngine/text/2.txt docId:0 tuples:
TermTuple: activity freq:1 curPos:0
TermTuple: destination freq:1 curPos:1
TermTuple: emergency freq:1 curPos:2
TermTuple: 26% freq:1 curPos:3
TermTuple: u571 freq:1 curPos:4
TermTuple: because freq:1 curPos:5
TermTuple: hence freq:1 curPos:6
TermTuple: capital freq:1 curPos:7
TermTuple: frozen freq:1 curPos:9
TermTuple: benefits freq:1 curPos:10
TermTuple: google freq:1 curPos:11
TermTuple: frozen freq:1 curPos:14
TermTuple: google freq:1 curPos:15
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4f51b3e0]" started-at="2024-05-27T12:50:13Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//text/2.txt docId:0 tuples:
TermTuple: activity freq:1 curPos:0
TermTuple: destination freq:1 curPos:1
TermTuple: emergency freq:1 curPos:2
TermTuple: because freq:1 curPos:5
TermTuple: hence freq:1 curPos:6
TermTuple: capital freq:1 curPos:7
TermTuple: i freq:1 curPos:8
TermTuple: frozen freq:1 curPos:9
TermTuple: benefits freq:1 curPos:10
TermTuple: google freq:1 curPos:11
TermTuple: hahahahahahahahahahahahah freq:1 curPos:12
TermTuple: ha freq:1 curPos:13
TermTuple: frozen freq:1 curPos:14
TermTuple: google freq:1 curPos:15
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Document: path:D:\IdeaWorkspace\SeachEngine/text/2.txt docId:0 tuples:
TermTuple: activity freq:1 curPos:0
TermTuple: destination freq:1 curPos:1
TermTuple: emergency freq:1 curPos:2
TermTuple: because freq:1 curPos:5
TermTuple: hence freq:1 curPos:6
TermTuple: capital freq:1 curPos:7
TermTuple: i freq:1 curPos:8
TermTuple: frozen freq:1 curPos:9
TermTuple: benefits freq:1 curPos:10
TermTuple: google freq:1 curPos:11
TermTuple: hahahahahahahahahahahahah freq:1 curPos:12
TermTuple: ha freq:1 curPos:13
TermTuple: frozen freq:1 curPos:14
TermTuple: google freq:1 curPos:15
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4f51b3e0]" started-at="2024-05-27T12:50:13Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//text/2.txt docId:0 tuples:
TermTuple: activity freq:1 curPos:0
TermTuple: destination freq:1 curPos:1
TermTuple: emergency freq:1 curPos:2
TermTuple: capital freq:1 curPos:7
TermTuple: frozen freq:1 curPos:9
TermTuple: benefits freq:1 curPos:10
TermTuple: google freq:1 curPos:11
TermTuple: frozen freq:1 curPos:14
TermTuple: google freq:1 curPos:15
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Document: path:D:\IdeaWorkspace\SeachEngine/text/2.txt docId:0 tuples:
TermTuple: activity freq:1 curPos:0
TermTuple: destination freq:1 curPos:1
TermTuple: emergency freq:1 curPos:2
TermTuple: capital freq:1 curPos:7
TermTuple: frozen freq:1 curPos:9
TermTuple: benefits freq:1 curPos:10
TermTuple: google freq:1 curPos:11
TermTuple: frozen freq:1 curPos:14
TermTuple: google freq:1 curPos:15
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4f51b3e0]" started-at="2024-05-27T12:50:13Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//text/2.txt docId:0 tuples:
TermTuple: activity freq:1 curPos:0
TermTuple: destination freq:1 curPos:1
TermTuple: emergency freq:1 curPos:2
TermTuple: capital freq:1 curPos:7
TermTuple: frozen freq:1 curPos:9
TermTuple: benefits freq:1 curPos:10
TermTuple: google freq:1 curPos:11
TermTuple: frozen freq:1 curPos:14
TermTuple: google freq:1 curPos:15
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Document: path:D:\IdeaWorkspace\SeachEngine/text/2.txt docId:0 tuples:
TermTuple: activity freq:1 curPos:0
TermTuple: destination freq:1 curPos:1
TermTuple: emergency freq:1 curPos:2
TermTuple: capital freq:1 curPos:7
TermTuple: frozen freq:1 curPos:9
TermTuple: benefits freq:1 curPos:10
TermTuple: google freq:1 curPos:11
TermTuple: frozen freq:1 curPos:14
TermTuple: google freq:1 curPos:15
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@4f51b3e0]" started-at="2024-05-27T12:50:13Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Document: path:/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//text/2.txt docId:0 tuples:
TermTuple: activity freq:1 curPos:0
TermTuple: destination freq:1 curPos:1
TermTuple: emergency freq:1 curPos:2
TermTuple: capital freq:1 curPos:7
TermTuple: frozen freq:1 curPos:9
TermTuple: benefits freq:1 curPos:10
TermTuple: google freq:1 curPos:11
TermTuple: frozen freq:1 curPos:14
TermTuple: google freq:1 curPos:15
}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Document: path:D:\IdeaWorkspace\SeachEngine/text/2.txt docId:0 tuples:
TermTuple: activity freq:1 curPos:0
TermTuple: destination freq:1 curPos:1
TermTuple: emergency freq:1 curPos:2
TermTuple: capital freq:1 curPos:7
TermTuple: frozen freq:1 curPos:9
TermTuple: benefits freq:1 curPos:10
TermTuple: google freq:1 curPos:11
TermTuple: frozen freq:1 curPos:14
TermTuple: google freq:1 curPos:15
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentBuilderTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java -->
    <test started-at="2024-05-27T12:50:13Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java" finished-at="2024-05-27T12:50:13Z" duration-ms="189">
      <class name="hust.cs.javacourse.search.index.IndexTest">
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@de3a06f]" started-at="2024-05-27T12:50:13Z" name="testTestToString" data-provider="testIndex" finished-at="2024-05-27T12:50:13Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary: [activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]

docPath mapping:
0 => D:\IdeaWorkspace\SeachEngine\text\1.txt
1 => D:\IdeaWorkspace\SeachEngine\text\2.txt
2 => D:\IdeaWorkspace\SeachEngine\text\3.txt

PostingList:
activity: PostingList:Posting{docId:0, freq:3, positions: 0 1 6}
Posting{docId:1, freq:1, positions: 0}

benefits: PostingList:Posting{docId:0, freq:2, positions: 2 7}
Posting{docId:1, freq:1, positions: 10}

capital: PostingList:Posting{docId:0, freq:2, positions: 3 8}
Posting{docId:1, freq:1, positions: 7}

destination: PostingList:Posting{docId:0, freq:2, positions: 4 9}
Posting{docId:1, freq:1, positions: 1}

emergency: PostingList:Posting{docId:0, freq:1, positions: 10}
Posting{docId:1, freq:1, positions: 2}

fizzy: PostingList:Posting{docId:0, freq:1, positions: 5}

frozen: PostingList:Posting{docId:1, freq:2, positions: 9 14}

google: PostingList:Posting{docId:1, freq:2, positions: 11 15}

marketplace: PostingList:Posting{docId:2, freq:1, positions: 0}

medical: PostingList:Posting{docId:2, freq:1, positions: 1}

notification: PostingList:Posting{docId:2, freq:1, positions: 3}

peninsula: PostingList:Posting{docId:2, freq:1, positions: 5}

pollution: PostingList:Posting{docId:2, freq:1, positions: 7}

]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@6d23017e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testAddDocument([Lhust.cs.javacourse.search.index.AbstractIndex;, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@de3a06f]" started-at="2024-05-27T12:50:13Z" name="testAddDocument" data-provider="testIndex" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractIndex;@7f36662c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{Document: path:D:\IdeaWorkspace\SeachEngine/text/2.txt docId:1 tuples:
TermTuple: activity freq:1 curPos:0
TermTuple: destination freq:1 curPos:1
TermTuple: emergency freq:1 curPos:2
TermTuple: capital freq:1 curPos:7
TermTuple: frozen freq:1 curPos:9
TermTuple: benefits freq:1 curPos:10
TermTuple: google freq:1 curPos:11
TermTuple: frozen freq:1 curPos:14
TermTuple: google freq:1 curPos:15
}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDocument -->
        <test-method signature="testLoad(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@de3a06f]" started-at="2024-05-27T12:50:13Z" name="testLoad" data-provider="testIndex" finished-at="2024-05-27T12:50:13Z" duration-ms="14" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary: [activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]

docPath mapping:
0 => D:\IdeaWorkspace\SeachEngine\text\1.txt
1 => D:\IdeaWorkspace\SeachEngine\text\2.txt
2 => D:\IdeaWorkspace\SeachEngine\text\3.txt

PostingList:
activity: PostingList:Posting{docId:0, freq:3, positions: 0 1 6}
Posting{docId:1, freq:1, positions: 0}

benefits: PostingList:Posting{docId:0, freq:2, positions: 2 7}
Posting{docId:1, freq:1, positions: 10}

capital: PostingList:Posting{docId:0, freq:2, positions: 3 8}
Posting{docId:1, freq:1, positions: 7}

destination: PostingList:Posting{docId:0, freq:2, positions: 4 9}
Posting{docId:1, freq:1, positions: 1}

emergency: PostingList:Posting{docId:0, freq:1, positions: 10}
Posting{docId:1, freq:1, positions: 2}

fizzy: PostingList:Posting{docId:0, freq:1, positions: 5}

frozen: PostingList:Posting{docId:1, freq:2, positions: 9 14}

google: PostingList:Posting{docId:1, freq:2, positions: 11 15}

marketplace: PostingList:Posting{docId:2, freq:1, positions: 0}

medical: PostingList:Posting{docId:2, freq:1, positions: 1}

notification: PostingList:Posting{docId:2, freq:1, positions: 3}

peninsula: PostingList:Posting{docId:2, freq:1, positions: 5}

pollution: PostingList:Posting{docId:2, freq:1, positions: 7}

]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoad -->
        <test-method signature="testSave(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@de3a06f]" started-at="2024-05-27T12:50:13Z" name="testSave" data-provider="testIndex" finished-at="2024-05-27T12:50:13Z" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary: [activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]

docPath mapping:
0 => D:\IdeaWorkspace\SeachEngine\text\1.txt
1 => D:\IdeaWorkspace\SeachEngine\text\2.txt
2 => D:\IdeaWorkspace\SeachEngine\text\3.txt

PostingList:
activity: PostingList:Posting{docId:0, freq:3, positions: 0 1 6}
Posting{docId:1, freq:1, positions: 0}

benefits: PostingList:Posting{docId:0, freq:2, positions: 2 7}
Posting{docId:1, freq:1, positions: 10}

capital: PostingList:Posting{docId:0, freq:2, positions: 3 8}
Posting{docId:1, freq:1, positions: 7}

destination: PostingList:Posting{docId:0, freq:2, positions: 4 9}
Posting{docId:1, freq:1, positions: 1}

emergency: PostingList:Posting{docId:0, freq:1, positions: 10}
Posting{docId:1, freq:1, positions: 2}

fizzy: PostingList:Posting{docId:0, freq:1, positions: 5}

frozen: PostingList:Posting{docId:1, freq:2, positions: 9 14}

google: PostingList:Posting{docId:1, freq:2, positions: 11 15}

marketplace: PostingList:Posting{docId:2, freq:1, positions: 0}

medical: PostingList:Posting{docId:2, freq:1, positions: 1}

notification: PostingList:Posting{docId:2, freq:1, positions: 3}

peninsula: PostingList:Posting{docId:2, freq:1, positions: 5}

pollution: PostingList:Posting{docId:2, freq:1, positions: 7}

]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSave -->
        <test-method signature="testSearch(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractPostingList)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@de3a06f]" started-at="2024-05-27T12:50:13Z" name="testSearch" data-provider="testIndex" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary: [activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]

docPath mapping:
0 => D:\IdeaWorkspace\SeachEngine\text\1.txt
1 => D:\IdeaWorkspace\SeachEngine\text\2.txt
2 => D:\IdeaWorkspace\SeachEngine\text\3.txt

PostingList:
activity: PostingList:Posting{docId:0, freq:3, positions: 0 1 6}
Posting{docId:1, freq:1, positions: 0}

benefits: PostingList:Posting{docId:0, freq:2, positions: 2 7}
Posting{docId:1, freq:1, positions: 10}

capital: PostingList:Posting{docId:0, freq:2, positions: 3 8}
Posting{docId:1, freq:1, positions: 7}

destination: PostingList:Posting{docId:0, freq:2, positions: 4 9}
Posting{docId:1, freq:1, positions: 1}

emergency: PostingList:Posting{docId:0, freq:1, positions: 10}
Posting{docId:1, freq:1, positions: 2}

fizzy: PostingList:Posting{docId:0, freq:1, positions: 5}

frozen: PostingList:Posting{docId:1, freq:2, positions: 9 14}

google: PostingList:Posting{docId:1, freq:2, positions: 11 15}

marketplace: PostingList:Posting{docId:2, freq:1, positions: 0}

medical: PostingList:Posting{docId:2, freq:1, positions: 1}

notification: PostingList:Posting{docId:2, freq:1, positions: 3}

peninsula: PostingList:Posting{docId:2, freq:1, positions: 5}

pollution: PostingList:Posting{docId:2, freq:1, positions: 7}

]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[PostingList:Posting{docId:0, freq:3, positions: 0 1 6}
Posting{docId:1, freq:1, positions: 0}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testGetDictionary(hust.cs.javacourse.search.index.AbstractIndex, java.util.Set)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@de3a06f]" started-at="2024-05-27T12:50:13Z" name="testGetDictionary" data-provider="testIndex" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary: [activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]

docPath mapping:
0 => D:\IdeaWorkspace\SeachEngine\text\1.txt
1 => D:\IdeaWorkspace\SeachEngine\text\2.txt
2 => D:\IdeaWorkspace\SeachEngine\text\3.txt

PostingList:
activity: PostingList:Posting{docId:0, freq:3, positions: 0 1 6}
Posting{docId:1, freq:1, positions: 0}

benefits: PostingList:Posting{docId:0, freq:2, positions: 2 7}
Posting{docId:1, freq:1, positions: 10}

capital: PostingList:Posting{docId:0, freq:2, positions: 3 8}
Posting{docId:1, freq:1, positions: 7}

destination: PostingList:Posting{docId:0, freq:2, positions: 4 9}
Posting{docId:1, freq:1, positions: 1}

emergency: PostingList:Posting{docId:0, freq:1, positions: 10}
Posting{docId:1, freq:1, positions: 2}

fizzy: PostingList:Posting{docId:0, freq:1, positions: 5}

frozen: PostingList:Posting{docId:1, freq:2, positions: 9 14}

google: PostingList:Posting{docId:1, freq:2, positions: 11 15}

marketplace: PostingList:Posting{docId:2, freq:1, positions: 0}

medical: PostingList:Posting{docId:2, freq:1, positions: 1}

notification: PostingList:Posting{docId:2, freq:1, positions: 3}

peninsula: PostingList:Posting{docId:2, freq:1, positions: 5}

pollution: PostingList:Posting{docId:2, freq:1, positions: 7}

]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDictionary -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@de3a06f]" started-at="2024-05-27T12:50:13Z" name="testWriteObject" data-provider="testIndex" finished-at="2024-05-27T12:50:13Z" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary: [activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]

docPath mapping:
0 => D:\IdeaWorkspace\SeachEngine\text\1.txt
1 => D:\IdeaWorkspace\SeachEngine\text\2.txt
2 => D:\IdeaWorkspace\SeachEngine\text\3.txt

PostingList:
activity: PostingList:Posting{docId:0, freq:3, positions: 0 1 6}
Posting{docId:1, freq:1, positions: 0}

benefits: PostingList:Posting{docId:0, freq:2, positions: 2 7}
Posting{docId:1, freq:1, positions: 10}

capital: PostingList:Posting{docId:0, freq:2, positions: 3 8}
Posting{docId:1, freq:1, positions: 7}

destination: PostingList:Posting{docId:0, freq:2, positions: 4 9}
Posting{docId:1, freq:1, positions: 1}

emergency: PostingList:Posting{docId:0, freq:1, positions: 10}
Posting{docId:1, freq:1, positions: 2}

fizzy: PostingList:Posting{docId:0, freq:1, positions: 5}

frozen: PostingList:Posting{docId:1, freq:2, positions: 9 14}

google: PostingList:Posting{docId:1, freq:2, positions: 11 15}

marketplace: PostingList:Posting{docId:2, freq:1, positions: 0}

medical: PostingList:Posting{docId:2, freq:1, positions: 1}

notification: PostingList:Posting{docId:2, freq:1, positions: 3}

peninsula: PostingList:Posting{docId:2, freq:1, positions: 5}

pollution: PostingList:Posting{docId:2, freq:1, positions: 7}

]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@de3a06f]" started-at="2024-05-27T12:50:13Z" name="testReadObject" data-provider="testIndex" finished-at="2024-05-27T12:50:13Z" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary: [activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]

docPath mapping:
0 => D:\IdeaWorkspace\SeachEngine\text\1.txt
1 => D:\IdeaWorkspace\SeachEngine\text\2.txt
2 => D:\IdeaWorkspace\SeachEngine\text\3.txt

PostingList:
activity: PostingList:Posting{docId:0, freq:3, positions: 0 1 6}
Posting{docId:1, freq:1, positions: 0}

benefits: PostingList:Posting{docId:0, freq:2, positions: 2 7}
Posting{docId:1, freq:1, positions: 10}

capital: PostingList:Posting{docId:0, freq:2, positions: 3 8}
Posting{docId:1, freq:1, positions: 7}

destination: PostingList:Posting{docId:0, freq:2, positions: 4 9}
Posting{docId:1, freq:1, positions: 1}

emergency: PostingList:Posting{docId:0, freq:1, positions: 10}
Posting{docId:1, freq:1, positions: 2}

fizzy: PostingList:Posting{docId:0, freq:1, positions: 5}

frozen: PostingList:Posting{docId:1, freq:2, positions: 9 14}

google: PostingList:Posting{docId:1, freq:2, positions: 11 15}

marketplace: PostingList:Posting{docId:2, freq:1, positions: 0}

medical: PostingList:Posting{docId:2, freq:1, positions: 1}

notification: PostingList:Posting{docId:2, freq:1, positions: 3}

peninsula: PostingList:Posting{docId:2, freq:1, positions: 5}

pollution: PostingList:Posting{docId:2, freq:1, positions: 7}

]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/C:/Users/icyyoung/Desktop/JAVA/Experiment_file/Experiment1Test(JDK1/Experiment1Test(JDK17)/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
        <test-method signature="testOptimize(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@de3a06f]" started-at="2024-05-27T12:50:13Z" name="testOptimize" data-provider="testIndex" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary: [activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]

docPath mapping:
0 => D:\IdeaWorkspace\SeachEngine\text\1.txt
1 => D:\IdeaWorkspace\SeachEngine\text\2.txt
2 => D:\IdeaWorkspace\SeachEngine\text\3.txt

PostingList:
activity: PostingList:Posting{docId:0, freq:3, positions: 0 1 6}
Posting{docId:1, freq:1, positions: 0}

benefits: PostingList:Posting{docId:0, freq:2, positions: 2 7}
Posting{docId:1, freq:1, positions: 10}

capital: PostingList:Posting{docId:0, freq:2, positions: 3 8}
Posting{docId:1, freq:1, positions: 7}

destination: PostingList:Posting{docId:0, freq:2, positions: 4 9}
Posting{docId:1, freq:1, positions: 1}

emergency: PostingList:Posting{docId:0, freq:1, positions: 10}
Posting{docId:1, freq:1, positions: 2}

fizzy: PostingList:Posting{docId:0, freq:1, positions: 5}

frozen: PostingList:Posting{docId:1, freq:2, positions: 9 14}

google: PostingList:Posting{docId:1, freq:2, positions: 11 15}

marketplace: PostingList:Posting{docId:2, freq:1, positions: 0}

medical: PostingList:Posting{docId:2, freq:1, positions: 1}

notification: PostingList:Posting{docId:2, freq:1, positions: 3}

peninsula: PostingList:Posting{docId:2, freq:1, positions: 5}

pollution: PostingList:Posting{docId:2, freq:1, positions: 7}

]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dictionary: [activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]

docPath mapping:
0 => D:\IdeaWorkspace\SeachEngine\text\1.txt
1 => D:\IdeaWorkspace\SeachEngine\text\2.txt
2 => D:\IdeaWorkspace\SeachEngine\text\3.txt

PostingList:
activity: PostingList:Posting{docId:0, freq:3, positions: 0 1 6}
Posting{docId:1, freq:1, positions: 0}

benefits: PostingList:Posting{docId:0, freq:2, positions: 2 7}
Posting{docId:1, freq:1, positions: 10}

capital: PostingList:Posting{docId:0, freq:2, positions: 3 8}
Posting{docId:1, freq:1, positions: 7}

destination: PostingList:Posting{docId:0, freq:2, positions: 4 9}
Posting{docId:1, freq:1, positions: 1}

emergency: PostingList:Posting{docId:0, freq:1, positions: 10}
Posting{docId:1, freq:1, positions: 2}

fizzy: PostingList:Posting{docId:0, freq:1, positions: 5}

frozen: PostingList:Posting{docId:1, freq:2, positions: 9 14}

google: PostingList:Posting{docId:1, freq:2, positions: 11 15}

marketplace: PostingList:Posting{docId:2, freq:1, positions: 0}

medical: PostingList:Posting{docId:2, freq:1, positions: 1}

notification: PostingList:Posting{docId:2, freq:1, positions: 3}

peninsula: PostingList:Posting{docId:2, freq:1, positions: 5}

pollution: PostingList:Posting{docId:2, freq:1, positions: 7}

]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimize -->
        <test-method signature="testGetDocName(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@de3a06f]" started-at="2024-05-27T12:50:13Z" name="testGetDocName" data-provider="testIndex" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary: [activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]

docPath mapping:
0 => D:\IdeaWorkspace\SeachEngine\text\1.txt
1 => D:\IdeaWorkspace\SeachEngine\text\2.txt
2 => D:\IdeaWorkspace\SeachEngine\text\3.txt

PostingList:
activity: PostingList:Posting{docId:0, freq:3, positions: 0 1 6}
Posting{docId:1, freq:1, positions: 0}

benefits: PostingList:Posting{docId:0, freq:2, positions: 2 7}
Posting{docId:1, freq:1, positions: 10}

capital: PostingList:Posting{docId:0, freq:2, positions: 3 8}
Posting{docId:1, freq:1, positions: 7}

destination: PostingList:Posting{docId:0, freq:2, positions: 4 9}
Posting{docId:1, freq:1, positions: 1}

emergency: PostingList:Posting{docId:0, freq:1, positions: 10}
Posting{docId:1, freq:1, positions: 2}

fizzy: PostingList:Posting{docId:0, freq:1, positions: 5}

frozen: PostingList:Posting{docId:1, freq:2, positions: 9 14}

google: PostingList:Posting{docId:1, freq:2, positions: 11 15}

marketplace: PostingList:Posting{docId:2, freq:1, positions: 0}

medical: PostingList:Posting{docId:2, freq:1, positions: 1}

notification: PostingList:Posting{docId:2, freq:1, positions: 3}

peninsula: PostingList:Posting{docId:2, freq:1, positions: 5}

pollution: PostingList:Posting{docId:2, freq:1, positions: 7}

]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@28e8dde3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocName -->
      </class> <!-- hust.cs.javacourse.search.index.IndexTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java -->
    <test started-at="2024-05-27T12:50:13Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java" finished-at="2024-05-27T12:50:13Z" duration-ms="26">
      <class name="hust.cs.javacourse.search.index.IndexBuilderTest">
        <test-method signature="testBuildIndex(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexBuilderTest@58a90037]" started-at="2024-05-27T12:50:13Z" name="testBuildIndex" data-provider="testIndexBuilder" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[dictionary: [activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]

docPath mapping:
0 => C:\Users\icyyoung\Desktop\JAVA\Experiment_file\Experiment1Test(JDK1\Experiment1Test(JDK17)\test\text\1.txt
1 => C:\Users\icyyoung\Desktop\JAVA\Experiment_file\Experiment1Test(JDK1\Experiment1Test(JDK17)\test\text\2.txt
2 => C:\Users\icyyoung\Desktop\JAVA\Experiment_file\Experiment1Test(JDK1\Experiment1Test(JDK17)\test\text\3.txt

PostingList:
activity: PostingList:Posting{docId:0, freq:3, positions: 0 1 6}
Posting{docId:1, freq:1, positions: 0}

benefits: PostingList:Posting{docId:0, freq:2, positions: 2 7}
Posting{docId:1, freq:1, positions: 10}

capital: PostingList:Posting{docId:0, freq:2, positions: 3 8}
Posting{docId:1, freq:1, positions: 7}

destination: PostingList:Posting{docId:0, freq:2, positions: 4 9}
Posting{docId:1, freq:1, positions: 1}

emergency: PostingList:Posting{docId:0, freq:1, positions: 10}
Posting{docId:1, freq:1, positions: 2}

fizzy: PostingList:Posting{docId:0, freq:1, positions: 5}

frozen: PostingList:Posting{docId:1, freq:2, positions: 9 14}

google: PostingList:Posting{docId:1, freq:2, positions: 11 15}

marketplace: PostingList:Posting{docId:2, freq:1, positions: 0}

medical: PostingList:Posting{docId:2, freq:1, positions: 1}

notification: PostingList:Posting{docId:2, freq:1, positions: 3}

peninsula: PostingList:Posting{docId:2, freq:1, positions: 5}

pollution: PostingList:Posting{docId:2, freq:1, positions: 7}

]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[dictionary: [activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]

docPath mapping:
0 => D:\IdeaWorkspace\SeachEngine\text\1.txt
1 => D:\IdeaWorkspace\SeachEngine\text\2.txt
2 => D:\IdeaWorkspace\SeachEngine\text\3.txt

PostingList:
activity: PostingList:Posting{docId:0, freq:3, positions: 0 1 6}
Posting{docId:1, freq:1, positions: 0}

benefits: PostingList:Posting{docId:0, freq:2, positions: 2 7}
Posting{docId:1, freq:1, positions: 10}

capital: PostingList:Posting{docId:0, freq:2, positions: 3 8}
Posting{docId:1, freq:1, positions: 7}

destination: PostingList:Posting{docId:0, freq:2, positions: 4 9}
Posting{docId:1, freq:1, positions: 1}

emergency: PostingList:Posting{docId:0, freq:1, positions: 10}
Posting{docId:1, freq:1, positions: 2}

fizzy: PostingList:Posting{docId:0, freq:1, positions: 5}

frozen: PostingList:Posting{docId:1, freq:2, positions: 9 14}

google: PostingList:Posting{docId:1, freq:2, positions: 11 15}

marketplace: PostingList:Posting{docId:2, freq:1, positions: 0}

medical: PostingList:Posting{docId:2, freq:1, positions: 1}

notification: PostingList:Posting{docId:2, freq:1, positions: 3}

peninsula: PostingList:Posting{docId:2, freq:1, positions: 5}

pollution: PostingList:Posting{docId:2, freq:1, positions: 7}

]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildIndex -->
      </class> <!-- hust.cs.javacourse.search.index.IndexBuilderTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java -->
    <test started-at="2024-05-27T12:50:13Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java" finished-at="2024-05-27T12:50:13Z" duration-ms="43">
      <class name="hust.cs.javacourse.search.query.HitTest">
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@7181ae3f]" started-at="2024-05-27T12:50:13Z" name="testGetDocId" data-provider="testHit" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt score:1.0 times:0.6666666666666666
contentactivity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Term:activity,Posting:Posting{docId:1, freq:1, positions: 0}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@7181ae3f]" started-at="2024-05-27T12:50:13Z" name="testGetDocId" data-provider="testHit" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0 docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt score:3.0 times:2.0
contentactivity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Term:activity,Posting:Posting{docId:0, freq:3, positions: 0 1 6}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@7181ae3f]" started-at="2024-05-27T12:50:13Z" name="testGetDocPath" data-provider="testHit" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt score:1.0 times:0.6666666666666666
contentactivity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Term:activity,Posting:Posting{docId:1, freq:1, positions: 0}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@7181ae3f]" started-at="2024-05-27T12:50:13Z" name="testGetDocPath" data-provider="testHit" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0 docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt score:3.0 times:2.0
contentactivity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Term:activity,Posting:Posting{docId:0, freq:3, positions: 0 1 6}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@7181ae3f]" started-at="2024-05-27T12:50:13Z" name="testGetContent" data-provider="testHit" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt score:1.0 times:0.6666666666666666
contentactivity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Term:activity,Posting:Posting{docId:1, freq:1, positions: 0}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@7181ae3f]" started-at="2024-05-27T12:50:13Z" name="testGetContent" data-provider="testHit" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0 docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt score:3.0 times:2.0
contentactivity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Term:activity,Posting:Posting{docId:0, freq:3, positions: 0 1 6}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@7181ae3f]" started-at="2024-05-27T12:50:13Z" name="testSetContent" data-provider="testHit" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt score:1.0 times:0.6666666666666666
contentnew content2
Term:activity,Posting:Posting{docId:1, freq:1, positions: 0}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@7181ae3f]" started-at="2024-05-27T12:50:13Z" name="testSetContent" data-provider="testHit" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0 docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt score:3.0 times:2.0
contentnew content1
Term:activity,Posting:Posting{docId:0, freq:3, positions: 0 1 6}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@7181ae3f]" started-at="2024-05-27T12:50:13Z" name="testGetScore" data-provider="testHit" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0 docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt score:3.0 times:2.0
contentactivity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Term:activity,Posting:Posting{docId:0, freq:3, positions: 0 1 6}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@7181ae3f]" started-at="2024-05-27T12:50:13Z" name="testGetScore" data-provider="testHit" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt score:1.0 times:0.6666666666666666
contentactivity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Term:activity,Posting:Posting{docId:1, freq:1, positions: 0}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@7181ae3f]" started-at="2024-05-27T12:50:13Z" name="testSetScore" data-provider="testHit" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0 docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt score:-3.0 times:-2.0
contentactivity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Term:activity,Posting:Posting{docId:0, freq:3, positions: 0 1 6}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@7181ae3f]" started-at="2024-05-27T12:50:13Z" name="testSetScore" data-provider="testHit" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt score:-1.0 times:-0.6666666666666666
contentactivity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Term:activity,Posting:Posting{docId:1, freq:1, positions: 0}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@7181ae3f]" started-at="2024-05-27T12:50:13Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:1 docPath:D:\IdeaWorkspace\SeachEngine\text\2.txt score:1.0 times:0.6666666666666666
contentactivity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Term:activity,Posting:Posting{docId:1, freq:1, positions: 0}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@7181ae3f]" started-at="2024-05-27T12:50:13Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0 docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt score:3.0 times:2.0
contentactivity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Term:activity,Posting:Posting{docId:0, freq:3, positions: 0 1 6}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.query.AbstractHit, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@7181ae3f]" started-at="2024-05-27T12:50:13Z" name="testTestToString" data-provider="testHit" finished-at="2024-05-27T12:50:13Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docId:0 docPath:D:\IdeaWorkspace\SeachEngine\text\1.txt score:3.0 times:2.0
contentactivity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Term:activity,Posting:Posting{docId:0, freq:3, positions: 0 1 6}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@42f8285e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.query.AbstractHit;, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@7181ae3f]" started-at="2024-05-27T12:50:13Z" name="testCompareTo" data-provider="testHit" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@18bc345]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
      </class> <!-- hust.cs.javacourse.search.query.HitTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java -->
    <test started-at="2024-05-27T12:50:13Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java" finished-at="2024-05-27T12:50:13Z" duration-ms="65">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5204062d]" started-at="2024-05-27T12:50:12Z" name="beforeSuite" finished-at="2024-05-27T12:50:12Z" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
      <class name="hust.cs.javacourse.search.query.IndexSearcherTest">
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@517cd4b]" started-at="2024-05-27T12:50:13Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@758c83d8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@129b4fe2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@517cd4b]" started-at="2024-05-27T12:50:13Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@338494fa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@505a9d7c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testTestSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@517cd4b]" started-at="2024-05-27T12:50:13Z" name="testTestSearch" data-provider="testIndexSearcher" finished-at="2024-05-27T12:50:13Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@5af3a0f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@19ae6bb]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestSearch -->
      </class> <!-- hust.cs.javacourse.search.query.IndexSearcherTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java -->
  </suite> <!-- All Test Suite -->
</testng-results>
